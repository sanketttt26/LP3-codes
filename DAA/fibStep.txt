#include <iostream>
#include <vector>
using namespace std;

int fibonacci(int n) {
    if (n <= 1) return n; 
    return fibonacci(n - 1) + fibonacci(n - 2);
}
int stepCountRecursion(int n) {
    if (n <= 1) return 1; 
    return stepCountRecursion(n - 1) + stepCountRecursion(n - 2);
}

pair<int, int> stepCountIteration(int n) {
    int count = 0;
    vector<int> fib(n + 1);
    fib[0] = 0;
    fib[1] = 1;
    for (int i = 2; i <= n; i++) {
        fib[i] = fib[i - 1] + fib[i - 2]; 
        count++; 
    }
    return make_pair(fib[n], count); 
}

int main() {
    int n;
    cout << "Enter the number of Fibonacci numbers to calculate: ";
    cin >> n;

    int stepsRecursion = stepCountRecursion(n);
    cout << "Fibonacci Recursion: " << fibonacci(n) << endl;
    cout << "Fibonacci Recursion Steps: " << stepsRecursion << endl;

    auto result = stepCountIteration(n);
    cout << "Fibonacci Iteration: " << result.first << endl;
    cout << "Fibonacci Iteration Steps: " << result.second << endl;

    return 0;
}
